name: Run Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.7
        env:
          POSTGRES_DB: d-roles
          POSTGRES_USER: d-roles
          POSTGRES_PASSWORD: d-roles
          POSTGRES_SCHEMA: d_roles
          DB_ENV: test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mailhog:
        image: mailhog/mailhog:v1.0.1
        ports:
          - 1025:1025  # SMTP port
          - 8025:8025  # Web UI port

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .

      - name: Create .env file
        run: |
          cat > .env << EOL
          DB_NAME=d-roles
          DB_USER=d-roles
          DB_PASSWORD=d-roles
          DB_SCHEMA=d_roles
          DB_ENV=test
          DB_PORT: 5433
          API_SECRET_KEY=random-secret-key-here-secret-key-here-ghghghghghghghghghghghghgh
          SESSION_SECRET_KEY=another-random-secret-key-here-ghghghghghghghghghghghghgh-tttt
          PROCONNECT_CLIENT_ID=foo
          PROCONNECT_CLIENT_SECRET=bar
          PROCONNECT_URL_DISCOVER=foo
          PROCONNECT_REDIRECT_URI=bar
          PROCONNECT_POST_LOGOUT_REDIRECT_URI=foo
          MAIL_HOST=localhost
          MAIL_USERNAME=
          MAIL_PASSWORD=
          MAIL_PORT=1025
          MAIL_USE_STARTTLS=False
          DATAPASS_WEBHOOK_SECRET=ci_test_webhook_secret_at_least_16_chars
          EOL

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 5433
          DB_NAME: d-roles
          DB_USER: d-roles
          DB_PASSWORD: d-roles
          DB_SCHEMA: d_roles
          DB_ENV: test
        run: |
          sh ./db/entrypoint.sh
          make test
